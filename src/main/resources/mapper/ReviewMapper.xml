<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.ReviewMapper">
	<select id="selectReviews" resultType="Review">
		SELECT * FROM (
		    SELECT r.*, ROWNUM AS rnum FROM (
		        SELECT * FROM review
                <where>
	                <if test="requestData.keyword != null and requestData.keyword != ''">
	                    ${requestData.column} LIKE '%' || #{requestData.keyword} || '%'
	                </if>
            	</where>
		        ORDER BY id DESC
		    ) r
		)
		WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getReviewsByStoreId" resultType="com.project.domain.ReviewDomain">
    SELECT r.id, 
           r.member_id AS memberId,  
           r.store_id AS storeId, 
           r.score, 
           r.content, 
           r.created_at AS createdAt,
           r.review_image AS reviewImage,
           m.nickname
    FROM review r
    JOIN member m ON r.member_id = m.id
    WHERE r.store_id = #{store_id}
    ORDER BY r.created_at DESC
	</select>
	
	<insert id="insertReview" parameterType="com.project.domain.ReviewDomain">
        INSERT INTO review (member_id, store_id, score, content, created_at, review_image)
        VALUES (#{memberId}, #{storeId}, #{score}, #{content}, #{createdAt}, #{reviewImage,jdbcType=VARCHAR})
    </insert>
    
	<select id="countReviews" resultType="long">
		SELECT COUNT(*) FROM review
        <where>
	        <if test="keyword != null and keyword != ''">
	            ${column} LIKE '%' || #{keyword} || '%'
	        </if>
    	</where>
	</select>
	
	
	<!--	
	<delete id="deleteReview" parameterType="map">
	    DELETE FROM review
	    WHERE id = #{id} AND member_id = #{member_id}
	</delete>
	-->
	
	<delete id="deleteReview" parameterType="long">
	    DELETE FROM review WHERE id = #{reviewId}
	</delete>
	
	<update id="updateReviewStatusToHidden">
        UPDATE review
        SET status = 'hidden'
        WHERE id = #{id}
    </update>
    
	
	<select id="selectReviewById" parameterType="long" resultType="Review">
		SELECT * FROM review
		WHERE id = #{id}
	</select>
	
	<select id="selectReviewMemberById" parameterType="long" resultType="com.project.dto.ReviewMemberDTO">
		SELECT r.*, m.nickname
		FROM Review r
		JOIN Member m ON r.member_id = m.id
	    WHERE r.member_id = #{memberId}
	</select>
	
	<update id="inactivateReview" parameterType="long">
		UPDATE review SET status='inactive'
		WHERE id=#{id}
	</update>
	
	<update id="reactivateReview" parameterType="long">
		UPDATE review SET status='active'
		WHERE id=#{id}
	</update>
	
	<update id="updateReview">
        UPDATE review
        SET content = #{content}
        WHERE id = #{id}
    </update>
	
</mapper>