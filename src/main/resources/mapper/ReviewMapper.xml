<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.ReviewMapper">
	<select id="selectReviews" resultType="Review">
		SELECT * FROM (
		    SELECT m.*, ROWNUM AS rnum FROM (
		        SELECT * FROM review 
		        ORDER BY id DESC
		    ) m
		) 
		WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getReviewsByStoreId" resultType="com.project.domain.ReviewDomain">
        SELECT r.id, 
               r.member_id,  
               r.store_id, 
               r.score, 
               r.content, 
               r.created_at, 
               m.nickname
        FROM review r
        JOIN member m ON r.member_id = m.id
        WHERE r.store_id = #{store_id}
        ORDER BY r.created_at DESC
    </select>
	
	<insert id="insertReview" parameterType="com.project.domain.ReviewDomain">
        INSERT INTO review (id, member_id, store_id, score, content, created_at)
        VALUES (#{id}, #{memberId}, #{storeId}, #{score}, #{content}, #{createdAt})
    </insert>
    
	<select id="countReviews" resultType="long">
		SELECT COUNT(*) FROM review
	</select>
	
	<delete id="deleteReview" parameterType="map">
	    DELETE FROM review
	    WHERE id = #{id} AND member_id = #{member_id}
	</delete>
	
	<select id="selectReviewById" parameterType="long" resultType="Review">
		SELECT * FROM review
		WHERE id = #{id}
	</select>
	
	<select id="selectReviewMemberById" parameterType="long" resultType="com.project.dto.ReviewMemberDTO">
		SELECT r.*, m.nickname
		FROM Review r
		JOIN Member m ON r.member_id = m.id
	    WHERE r.member_id = #{memberId}
	</select>
	
	<update id="inactivateReview" parameterType="long">
		UPDATE review SET status='inactive'
		WHERE id=#{id}
	</update>
	
	<update id="reactivateReview" parameterType="long">
		UPDATE review SET status='active'
		WHERE id=#{id}
	</update>
</mapper>